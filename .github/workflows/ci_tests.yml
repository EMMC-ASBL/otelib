name: CI - Tests

on:
  pull_request:
  push:
    branches:
      - 'master'
      - 'push-action/**'  # Allow pushing to protected branches (using CasperWA/push-protected)

jobs:

  pre-commit:
    runs-on: ubuntu-latest
    # timeout-minutes: 2

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel

        while IFS="" read -r line || [ -n "${line}" ]; do
          if [[ "${line}" =~ ^pre-commit.*$ ]]; then
            pre_commit="${line}"
          fi
        done < requirements_dev.txt

        pip install ${pre_commit}

    - name: Test with pre-commit
      run: SKIP=pylint,pylint-tests pre-commit run --all-files

  pylint-safety:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel
        pip install -U -r requirements.txt -r requirements_dev.txt
        pip install safety

    - name: Run pylint
      run: pylint --rcfile=pyproject.toml --ignore-paths=tests/ --extension-pkg-whitelist='pydantic' -- *.py otelib

    - name: Run pylint - tests
      run: pylint --rcfile=pyproject.toml --extension-pkg-whitelist='pydantic' --disable=C0415,W0621 -- tests

    # Ignore ID 44715 for now.
    # See this NumPy issue for more information: https://github.com/numpy/numpy/issues/19038
    - name: Run safety
      run: pip freeze | safety check --stdin --ignore 44715

  pytest-linux:
    runs-on: ubuntu-latest
    # timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel
        pip install -e .[dev]

    - name: Test with pytest
      run: pytest -vvv --cov-report=xml

    - name: Upload coverage to Codecov
      if: matrix.python-version == 3.9 && github.repository == 'EMMC-ASBL/otelib'
      uses: codecov/codecov-action@v2
      with:
        files: coverage.xml
        flags: linux

  pytest-win:
    runs-on: windows-latest
    # timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel
        pip install -e .[dev]

    - name: Test with pytest
      run: pytest -vvv --cov-report=xml

    - name: Upload coverage to Codecov
      if: matrix.python-version == 3.9 && github.repository == 'EMMC-ASBL/otelib'
      uses: codecov/codecov-action@v2
      with:
        files: coverage.xml
        flags: windows

  build-package:
    name: Build distribution package
    runs-on: ubuntu-latest
    # timeout-minutes: 5

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -U setuptools wheel build

      - name: Check building distribution
        run: python -m build
